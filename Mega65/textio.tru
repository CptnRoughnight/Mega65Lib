/***************************************************************/
/*	TRSE Mega65 StdLib										*/
/*	textio.TRU												*/	
/*															*/
/*	Procedures:												*/
/*															*/
/*	Functions:												*/
/*		Set80x50 	- set 80x50 textmode						*/
/*		Set80x25		- set 80x25 textmode						*/
/*		Set40x25		- set 40x25 textmode						*/
/*		ClearScreen	- Clear screen with char and color		*/
/*		SetScreenLocation	- Set memory address of screen 	*/
/*		SetCharLocation	- Set memory address of chardata		*/
/*		SetScreenBackground 	- Set Background and Border color	*/
/*		PrintChar	- print char at location with color 		*/
/*		PrintString 	- print string at location with color 	*/
/*															*/		
/***************************************************************/
unit textio;

@use "Mega65/memory"

var
	MAXX : byte = 80;
	MAXY : byte = 25;
	SCREEN_BANK : byte = 0;
	SCREEN_ADR : integer = $0800;
	CHAR_BANK : byte = 0;
	CHAR_ADR : integer = 0;
	s : ^byte;		// pointer for strings


/**************************************************/
/*	textio::COLOR								*/
/*												*/	
/*												*/
/**************************************************/
 COLORS : array[32] of byte = (
  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,
  64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,
);


/**************************************************/
/*	textio::Set80x50								*/
/*												*/	
/*												*/
/**************************************************/
procedure Set80x50;
begin
	MAXY := 50;
	asm("
		lda #%10000000
		tsb $d031
		
		lda #%00001000
		tsb $d031
		
		lda #50
		sta $d07b	
	");
end;

/**************************************************/
/*	textio::Set80x25								*/
/*												*/	
/*												*/
/**************************************************/
procedure Set80x25;
begin
	MAXY := 25;
	asm("
		lda #%10000000
		tsb $d031
		
		lda #%00001000
		trb $d031
		
		lda #25
		sta $d07b	
	");	
end;

/**************************************************/
/*	textio::Set40x25								*/
/*												*/	
/*												*/
/**************************************************/
procedure Set40x25;
begin
	MAXY := 25;
	MAXX := 40;
	asm("
		lda #%10000000
		trb $d031
		
		lda #%00001000
		trb $d031
		
		lda #25
		sta $d07b	
	");	
end;

/**************************************************/
/*	textio::ClearScreen							*/
/*												*/	
/*	ch			- character to fill the screen 	*/
/*	c			- color to fill the screen 		*/
/*												*/
/**************************************************/
procedure ClearScreen(ch,c : byte);
begin
	memory::Fill(SCREEN_BANK,SCREEN_ADR,MAXX*MAXY,ch);
	memory::Fill($ff08,$0000,MAXX*MAXY,c);
end;


/**************************************************/
/*	textio::ClearScreen							*/
/*												*/	
/*	back			- color background				*/
/*	border		- color border					*/
/*												*/ 
/**************************************************/
procedure SetScreenBackground(back,border : byte);
begin
	asm("
		lda localVariable_textio_SetScreenBackground_textio_back
		sta $d020
		lda localVariable_textio_SetScreenBackground_textio_border
		sta $d021
	");	
end;


/**************************************************/
/*	textio::SetCharLocation						*/
/*												*/	
/*	b			- Bank of charset location		*/
/*	adr			- address of charset location		*/
/*												*/
/**************************************************/
procedure SetCharLocation(b:byte;adr : integer);
begin
	CHAR_BANK := b;
	CHAR_ADR := adr;
	asm("
		lda localVariable_textio_SetCharLocation_textio_adr
		sta 	$D068
		lda localVariable_textio_SetCharLocation_textio_adr+1
		sta $D069
		lda localVariable_textio_SetCharLocation_textio_b
		sta $D06A	
	");	
end;


/**************************************************/
/*	textio::SetScreenLocation					*/
/*												*/	
/*	b			- Bank of screen Location		*/
/*	adr			- address of screen Location		*/
/**************************************************/
procedure SetScreenLocation(b:byte;adr : integer);
begin
	SCREEN_BANK := b;
	SCREEN_ADR := adr;
	asm("
		lda localVariable_textio_SetScreenLocation_textio_b
		sta $d062
		lda localVariable_textio_SetScreenLocation_textio_adr
		sta $d061
		lda localVariable_textio_SetScreenLocation_textio_adr+1
		sta $d060		
	");
end;


/**************************************************/
/*	textio::PrintChar							*/
/*												*/	
/*	x,y			- Screen position of char		*/
/*	ch			- char to print 					*/
/*  c			- color to print 				*/
/**************************************************/
procedure PrintChar(x,y,ch,c : byte);
begin
	memory::Poke32(SCREEN_BANK,SCREEN_ADR+x+y*MAXX,ch);
	memory::Poke32($ff8,x+y*MAXX,c);
end;


/**************************************************/
/*	textio::PrintString							*/
/*												*/	
/*	s			- pointer to string				*/
/*	x,y			- Screen position of string		*/
/*  c			- color to print 				*/
/**************************************************/
procedure PrintString(s : global ^byte;x,y,c : byte);
var
	i : byte;
begin
	i := 0;
	while (s[i]<>0) do
	begin
		memory::Poke32(SCREEN_BANK,SCREEN_ADR+(x+i)+y*MAXX,s[i]);
		memory::Poke32($ff8,(x+i)+y*MAXX,c);
		inc(i);
	end;
end;

end.