/****************************************************************/
/*	TRSE Mega65 StdLib											*/
/*	Example : fcm.ras											*/
/*																*/
/*	Shows usage of fcio unit									*/
/*																*/		
/****************************************************************/
program fcm;

@use "Mega65/memory"
@use "Mega65/system"
@use "Mega65/fcio"

var
	palette : array[] of byte = (0,0,0,17,17,17,34,34,34,51,51,51,68,68,68,85,85,85,102,102,102,119,119,119,136,136,136,153,153,153,170,170,170,187,187,187,204,204,204,
221,221,221,238,238,238,255,255,255,0,247,247,243,251,251,0,255,255,251,255,255,24,24,255,0,0,255,243,243,251,0,0,247,240,240,5,247,0,247,
251,243,251,95,0,95,223,24,255,255,12,188,255,24,24,255,0,0,251,243,243,247,0,0,85,65,65,247,243,0,251,247,243,255,247,0,255,251,24,
255,255,251,255,255,0,251,251,243,247,247,0,0,247,0,243,251,243,0,255,0,250,255,250,0,251,255,0,247,255,180,215,140,203,250,12,188,170,152,
106,10,9,231,73,73,230,40,120,231,230,6,10,150,245,12,135,39,13,168,71,30,185,215,190,170,200,95,155,185,111,140,250,95,30,45,247,0,255,
117,179,179,55,20,195,232,85,85,186,55,55,124,248,248,62,186,186,143,45,173,62,124,186,76,233,55,248,55,117,55,117,179,179,210,241,20,20,50,
55,55,179,248,248,117,42,42,85,91,91,39,124,124,248,173,173,186,222,222,124,124,62,186,186,124,248,232,235,85,55,248,117,133,215,227,100,5,35,
145,225,240,50,5,115,179,117,179,5,70,5,179,55,148,117,248,117,55,186,55,70,12,40,248,124,248,42,141,42,30,143,175,75,238,172,186,62,92,
120,75,232,5,215,245,240,150,100,225,210,50,50,20,100,179,55,55,70,186,186,248,124,124,186,62,62,124,31,31,235,45,15,186,124,62,138,155,205,
248,186,124,117,248,124,117,55,248,179,117,55,240,145,210,241,241,179,179,179,117,148,148,55,117,117,248,55,230,170,103,103,172,248,248,124,186,186,62,
13,173,143,62,62,255,186,248,124,248,117,124,55,117,248,117,179,55,195,50,195,100,35,100,39,4,39,248,117,248,186,117,186,186,55,186,190,202,30,
255,205,95,62,124,62,30,155,45,125,10,235,124,248,155,140,215,10,60,165,25,180,130,115,35,97,50,130,160,225,4,129,17,38,129,0,90,65,160,
173,2,1,93,37,164,255,195,160,95,165,35,255,38,38,111,219,19,255,90,195,125,185,240,173,230,160,75,165,0,10,180,80,245,35,65,53,5,160,
38,38,0,200,8,165,202,73,0,27,27,160,110,93,165,255,93,1,255,174,164,140,255,20,185,15,100,105,205,145,55,140,80,166,138,80,195,230,65,
130,67,80,2,100,128,192,197,192,65,105,80,160,125,160,65,110,160,215,255,55,180,15,165,0,92,65,80,75,5,193,200,228,33,131,35,33,137,8,
96,76,25,0,237,166,210,190,138,195,239,90,166,255,220,25,190,255,85,110,255,215,125,15,128,237,93,1,201,237,80,165,197,97,194,37,240,115,215,
0,164,201,35,70,105,0,37,111,129,166,219,50,135,205,150,217,60,164,74,255,9,11,255,165,92,255,235,155,175,135,230,15,164,165,255,38,20,111,
195,195,95,1,193,173,0,1,219,50,1,73,192,18,132,5,1,11,6,1,13,120,35,45,201,20,255,219,38,255,155,25,255,125,90,255,125,60,175,
143,108,207,110,55,255,255,37,255,173,2,14,219,146,255,219,1,92,200,65,235,165,129,183,70,65,70,20,0,38,35,160,100,85,145,115,10,145,40,
140,0,135,255,5,251,255,166,92,175,10,155,207,163,200,110,225,135,219,1,147,137,67,212);

	// FCM: every byte is mapped to the 256colors
	fcmTile : array[] of byte = (
	 0,0,2,2,2,2,0,0,
	 0,2,67,67,67,67,2,0,
	 2,150,67,150,150,150,150,2,
	 0,2,72,72,254,254,2,0,
	 0,2,72,72,59,254,254,2,
	 2,181,123,181,5,181,10,2,
	 2,59,123,5,5,123,72,2,
	 0,2,67,2,2,164,2,0
	);
	
	
	// NCM: every byte has 2 pixels
	// making the "image/sprite" 16pixels wide with 16colors
	// select a "palette" with .... 	
	ncmTile : array[] of byte = (
		9,0,0,0,0,0,0,144,
	 	144,136,136,136,136,136,136,9,
		128,200,204,204,204,204,140,8,
		128,200,199,204,204,124,140,8,
		128,200,204,193,28,204,140,8,
		128,200,204,28,193,204,140,8,
		128,136,136,136,136,136,136,8,
		0,0,0,0,0,0,0,0
	);
	
procedure CopyPalette;
begin
	asm("
		ldx #$ff
	@cploop:
		lda palette,x
		sta $d100,x
		lda palette+$100,x
		sta $d200,x
		lda palette+$200,x
		sta $d300,x
		dex
		bne @cploop
	");		
end;

procedure CopyFCMTile;
begin
	memory::Copy($0000,#fcmTile,$0004,$0000,64);
end;

procedure CopyNCMTile;
begin
	memory::Copy($0000,#ncmTile,$0004,$0000,64);	
end;

var 
	x,y : byte;
	
begin
	CopyPalette;

//	CopyFCMTile;
	CopyNCMTile;
	system::SetScreenBackground(4,0);

	fcio::InitFCM(640,200);
	system::SetScreenLocation($0005,$0000);
	fcio::ClearScreen;
	fcio::ToggleNCM;
	
	for x := 0 to system::MAXX*2 do
		for y := 0 to system::MAXY do
		begin
			fcio::PutTile(x,y,4096,mod(x+y*system::MAXX,16));
			//fcio::PutChar(x,y,mod(x+y*system::MAXX,128),1+mod(x+y*system::MAXX,15));
		end;
		fcio::PutTile(25,10,4096,12);
		fcio::PutChar(28,10,1,1);
	Loop();
end.
